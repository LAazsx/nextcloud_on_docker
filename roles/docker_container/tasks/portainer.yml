---

- name: generate admin passwd for portainer
  set_fact:
    portainer_passwd: "{{ lookup('password', '{{ nextcloud_credential_store }}/portainer_admin_secret chars=ascii_letters,digits length=32') }}"
  when: portainer_passwd == ''


- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} the portainer container"
  docker_container:
    name: portainer
    image: portainer/portainer:latest
    restart_policy: unless-stopped
    command: --host unix:///var/run/docker.sock --admin-password {{ portainer_passwd | password_hash('bcrypt') }}
    networks:
      - name: backend
    networks_cli_compatible: true
    labels:
      traefik.enable: "true"
      traefik.docker.network: backend
      traefik.http.routers.portainer-http.entrypoints: "web"
      traefik.http.routers.portainer-http.rule: "Host(`{{ nextcloud_server_fqdn }}`) && PathPrefix(`/portainer/`)"
      traefik.http.routers.portainer-http.middlewares: "portainer-https@docker"
      traefik.http.middlewares.portainer-https.redirectscheme.scheme: "https"
      traefik.http.routers.portainer.entrypoints: "web-secure"      
      traefik.http.routers.portainer.rule: "Host(`{{ nextcloud_server_fqdn }}`) && PathPrefix(`/portainer/`)"
      traefik.http.routers.portainer.middlewares: portainerpathstrip@docker
      traefik.http.middlewares.portainerpathstrip.stripprefix.prefixes: '/portainer'
      traefik.http.routers.portainer.service: portainer
      traefik.http.routers.portainer.tls: "true"
      traefik.http.routers.portainer.tls.options: "TLSOptionsDefault@file"
      traefik.http.routers.portainer.tls.certresolver: "certificatesResolverDefault"
      com.centurylinklabs.watchtower.enable: "true"

    volumes:
      - "{{ portainer_data_dir }}:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
    state: "{{ state | default('started') }}"

